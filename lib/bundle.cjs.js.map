{"version":3,"file":"bundle.cjs.js","sources":["../src/lib/emiiter.ts","../src/utils.ts","../src/lib/index.ts"],"sourcesContent":["class Emiiter<T = any> {\n  private quenes: Map<any, Array<any>>;\n  constructor() {\n    this.quenes = new Map();\n  }\n  public on(eventName: string, fn: Function): this {\n    this.quenes.has(eventName) || this.quenes.set(eventName, []);\n    this.quenes.get(eventName).push(fn);\n    return this;\n  }\n  public addEventListener(eventName: string, fn: Function): this {\n    this.quenes.has(eventName) || this.quenes.set(eventName, []);\n    this.quenes.get(eventName).push(fn);\n    return this;\n  }\n  public off(eventName: string, fn: Function): this {\n    let quene: Array<any> = this.quenes.get(eventName);\n    if (!quene) {\n      return this;\n    }\n    for (let i = 0; i < quene.length; i++) {\n      if (quene[i] === fn || quene[i].fn === fn) {\n        quene.splice(i, 1);\n      }\n    }\n    return this;\n  }\n  public once(eventName: string, fn: Function) {\n    function once() {\n      this.off(eventName, fn);\n      fn.call(this, arguments);\n    }\n    once.fn = fn;\n    this.on(eventName, once);\n    return this;\n  }\n  public emit(eventName: string, ...args: T[]) {\n    let quene: Array<Function> = this.quenes.get(eventName);\n    if (quene) {\n      for (let callback of quene) {\n        callback.call(this, ...args);\n      }\n    }\n    return this;\n  }\n}\n\nexport default Emiiter;\n","export  function log(type:'success' | 'error' | 'warning',msg:string) {\r\n    const colorList = {\r\n        'success':'color:#67C23A',\r\n        'error':'color:#F56C6C',\r\n        'warning':'color:#409EFF'\r\n    }\r\n    console.log(\"%c \"+msg,colorList[type])\r\n}","import Emiiter from \"./emiiter\";\nimport { log } from \"../utils\";\n\nconst STATUS = {\n  CONNECTING: \"connecting\",\n  OPEN: \"open\",\n  CLOSING: \"closing\",\n  CLOSED: \"closed\",\n};\n\ninterface IOptions {\n  protocol?: string | Array<string>;\n  _reconnect?: Boolean; // ÊòØÂê¶ÈáçÈÄ£\n  _autoConnect?: Boolean; // ÊòØÂê¶Ëá™ÂãïÈèàÊé•\n  _reconnectionAttempts?: number; // ÈáçÈÄ£Ê¨°Êï∏\n  _reconnectionDelay?: number; // ÈáçÈÄ£ÊôÇÈñì\n}\n\nexport default class KWebsocket extends Emiiter {\n  public kwebsocket: WebSocket;\n  public url: string | URL;\n  public options: IOptions;\n  public protocol: string | Array<string>;\n  public reconnectionCount: number = 0;\n  public _autoConnect: Boolean;\n  public _reconnect: Boolean;\n  public _reconnectionAttempts: number;\n  public _reconnectionDelay: number;\n  public _status: string;\n  public _reconnectTimeoutId: number;\n  constructor(url: string | URL, options: IOptions) {\n    super();\n    this.url = url;\n    this.protocol = options?.protocol;\n    this._autoConnect = options?._autoConnect;\n    this._reconnect = options?._reconnect;\n    this._reconnectionAttempts = options._reconnectionAttempts || Infinity;\n    this._reconnectionDelay = options._reconnectionDelay || 500;\n    this._autoConnect && this.doOpen();\n  }\n  public doOpen(): this {\n    try {\n      this._status = STATUS.CONNECTING;\n      this.kwebsocket = new WebSocket(this.url, this.protocol);\n      this.addEventListeners();\n    } catch (error) {\n      log(\"error\", error);\n    }\n    return this;\n  }\n  public doClose(): this {\n    this._status = STATUS.CLOSING;\n    this._reconnect = false;\n    this.kwebsocket = null;\n    return this;\n  }\n  public reconnect(): this {\n    if (\n      this.reconnectionCount < this._reconnectionAttempts &&\n      this._status === STATUS.CLOSED\n    ) {\n      log(\"warning\", \"üíï ÈáçÈÄ£‰∏≠\");\n      this.reconnectionCount++;\n      window.clearInterval(this._reconnectTimeoutId);\n      this._reconnectTimeoutId = window.setTimeout(() => {\n        this.doOpen();\n      }, this._reconnectionDelay);\n    }\n    return this;\n  }\n  public send(msg: string): this {\n    if (this._status === STATUS.CLOSING || this._status === STATUS.CLOSED) {\n      return this;\n    }\n    if (this._status === STATUS.OPEN) {\n      this.kwebsocket.send(msg);\n    }\n    return this;\n  }\n  private addEventListeners(): this {\n    [\"onopen\", \"onclose\", \"onmessage\", \"onerror\"].forEach((res: string) => {\n      this.kwebsocket[res] = (data: any) => {\n        if (res === \"onopen\") {\n          super.emit(res);\n          this._status = STATUS.OPEN;\n          log(\"success\", \"üôÇ ÈÄ£Êé•ÊàêÂäü\");\n        }\n        if (res === \"onmessage\") {\n          super.emit(res, data.data);\n          log(\"success\", \"üòÑ ÊàêÂäüÊî∂Âà∞Ë®äÊÅØ,Ë®äÊÅØÁÇ∫ \" + data.data);\n        }\n        if (res === \"onclose\") {\n          super.emit(res, data);\n          this._status = STATUS.CLOSED;\n          log(\"error\", \"ÈÄ£Êé•Â∑≤ÈóúÈñâ\");\n          this._reconnect && this.reconnect();\n        }\n        if (res === \"onerror\") {\n          super.emit(res, data);\n          this._status = STATUS.CLOSING;\n          log(\"error\", \"ÈÄ£Êé•Â§±Êïó,ÁôºÁîüÈåØË™§\");\n        }\n      };\n    });\n    return this;\n  }\n}\n"],"names":[],"mappings":"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"}